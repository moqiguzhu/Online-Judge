from typing import List
from collections import Counter


class Solution:
    def minCostToMoveChips(self, chips: List[int]) -> int:
        if chips is None or len(chips) < 2:
            return 0
        pos_cnt = Counter(chips)

        flag1, flag2 = True, True
        top1, top2 = -1, -1
        for pos, cnt in pos_cnt.most_common(len(chips)):
            if flag1 and pos % 2 == 0:
                top1 = pos
                flag1 = False
            if flag2 and pos % 2 == 1:
                top2 = pos
                flag2 = False
        res1, res2 = 0, 0
        if top1 == -1:
            res1 = 10**9+1
        if top2 == -1:
            res2 = 10**9+1
        for pos in chips:
            if top1 != -1 and (top1 - pos) % 2 == 1:
                res1 += 1
            if top2 != -1 and (top2 - pos) % 2 == 1:
                res2 += 1
        return min(res1, res2)


s = Solution()
chips = [873948575,474533627,452177083,791427808,697644123,302152894,541588572,558363886,548407188,471598140,770732235,301998733,325834022,556410479,203748400,435937358,60324793,705857413,873717995,625916506,625719859,231887650,700921520,761252154,156288291,495276617,286840694,336778205,644267123,247271202,742626048,992193925,363888842,509849880,662416263,255801216,95223395,874824616,81916406,987333781,149303171,693221574,629064170,916073939,816404459,123499148,793873766,321285807,48189630,328285582,125618638,849763739,217318109,892230315,703223138,121709772,953047617,148391378,895771954,208978761,414661066,503181327,381389664,190549842,941391859,480846286,993408450,713278346,847890986,122795238,604802113,313898525,686011611,360523783,649365910,791129806,711689749,172358016,321515694,586014973,357988079,291689585,328317319,922531774,973305216,110284608,733648583,225348216,781833709,963638701,91510661,532528005]
print(s.minCostToMoveChips(chips))
